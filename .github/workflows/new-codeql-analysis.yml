# ----------------------------------------------------------------------------
# Copyright 2021 The Netty Project
#
# The Netty Project licenses this file to you under the Apache License,
# version 2.0 (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at:
#
#   https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
# ----------------------------------------------------------------------------
# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
# The branches below must be a subset of the branches above
# Override automatic language detection by changing the below list
# Supported options are ['csharp', 'cpp', 'go', 'java', 'javascript', 'python']
# Learn more...
# https://docs.github.com/en/github/finding-security-vulnerabilities-and-errors-in-your-code/configuring-code-scanning#overriding-automatic-language-detection
# Cache .m2/repository
# Initializes the CodeQL tools for scanning.
# If you wish to specify custom queries, you can do so here or in a config file.
# By default, queries listed here will override any specified in a config file.
# Prefix the list here with "+" to use these queries and those in the config file.
# queries: ./path/to/local/query, your-org/your-repo/queries@main
# Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
# If this step fails, then you should remove it and run the build manually (see below)
# - name: Autobuild
#  uses: github/codeql-action/autobuild@v2
# ‚ÑπÔ∏è Command-line programs to run using the OS shell.
# üìö https://git.io/JvXDl
# ‚úèÔ∏è If the Autobuild fails above, remove it and uncomment the following three lines
#    and modify them (or add more) to build your code if your project
#    uses a compiled language

name: Modified CodeQL
env:
  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryhandler.count=5
    -Dmaven.wagon.httpconnectionManager.ttlSeconds=240
permissions:
  contents: read
jobs:
  analyze:
    permissions:
      actions: read
      contents: read
      security-events: write
    name: analyze (${{ matrix.language }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        language:
        - java
        - cpp
    steps:
    - name: Setup Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |-
        python -m pip install --upgrade pip
        pip install inotify
    - name: Run inotifywait
      run: |-
        python3 -c "
        import inotify.adapters
        import inotify.constants
        import os
        from datetime import datetime, timezone
        with open('/home/runner/inotifywait-log-analyze (${{ matrix.language }}).csv', 'w') as log_file:
          i = inotify.adapters.InotifyTree('/home/runner/work/netty/netty', inotify.constants.IN_CREATE | inotify.constants.IN_ACCESS)
          for event in i.event_gen(yield_nones=False):
            (_, type_names, path, filename) = event
            now = datetime.now(timezone.utc).strftime('%Y-%m-%dT%H:%M:%S.%f') + 'Z'
            events = ','.join(type_names)
            log_file.write(f'{now};{path};{filename};{events}\n')
            log_file.flush()
            os.fsync(log_file.fileno())
        " &
    - name: Checkout repository
      uses: actions/checkout@v4
    - run: touch optcd-3.txt
    - name: Cache local Maven repository
      uses: actions/cache@v4
      continue-on-error: true
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ matrix.language }} ${{ hashFiles('**/pom.xml')
          }}
        restore-keys: |-
          ${{ runner.os }}-maven-${{ matrix.language }}
          ${{ runner.os }}-maven-
    - run: touch optcd-4.txt
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
    - run: touch optcd-5.txt
    - name: Compile project
      run: ./mvnw -B -ntp clean package -DskipTests=true
    - run: touch optcd-6.txt
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
    - run: touch optcd-7.txt
    - name: Upload inotifywait logs
      uses: actions/upload-artifact@v4
      with:
        name: inotifywait-analyze (${{ matrix.language }})
        path: /home/runner/inotifywait-log-analyze (${{ matrix.language }}).csv
'on':
- push
- workflow_dispatch
